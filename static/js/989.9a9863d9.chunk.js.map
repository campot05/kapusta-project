{"version":3,"file":"static/js/989.9a9863d9.chunk.js","mappings":"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","sources":["components/InputArea/InputArea.styled.jsx","components/InputArea/InputArea.jsx","components/OperationsTable/OperationsTable.jsx","components/Summary/Summary.jsx","pages/Operations/Operations.jsx"],"sourcesContent":["import styled from 'styled-components';\nconst SIZE = {\n  mobile: '320px',\n  tablet: '768px',\n  laptop: '1280px',\n};\nconst DEVICE = {\n  mobile: `screen and (min-width: ${SIZE.mobile})`,\n  tablet: `screen and (min-width: ${SIZE.tablet})`,\n  laptop: `screen and (min-width: ${SIZE.laptop})`,\n};\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  @media ${DEVICE.tablet} {\n  }\n  @media ${DEVICE.laptop} {\n    flex-direction: row;\n    justify-self: flex-start;\n    flex-wrap: nowrap;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  align-items: center;\n  display: contents;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border-bottom-left-radius: 30%;\n  background-color: transparent;\n\n  @media ${DEVICE.tablet} {\n    display: flex;\n    flex-direction: row;\n    height: 44px;\n  }\n  @media ${DEVICE.laptop} {\n    height: 40px;\n    text-align: center;\n  }\n`;\n\nexport const DateWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  position: relative;\n  margin-right: 44px;\n\n  margin-bottom: 32px;\n  @media ${DEVICE.tablet} {\n    margin-bottom: 0px;\n  }\n`;\nexport const DateSelection = styled.input`\n  font-family: 'Roboto';\n  font-style: normal;\n  border: none;\n  font-weight: 900;\n  font-size: 14px;\n  line-height: 1.16;\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n\n  color: #52555f;\n\n  &::-webkit-calendar-picker-indicator {\n    color: rgba(0, 0, 0, 0);\n    z-index: 0;\n    width: 90px;\n    height: 100%;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    cursor: pointer;\n  }\n`;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const DescriptionInput = styled.input`\n  display: none;\n  width: 184px;\n  height: 44px;\n  border-top-left-radius: 16px;\n  font-size: 12px;\n  line-height: 1.14;\n  background-color: transparent;\n  padding-left: 30px;\n  border: 2px solid #ffffff;\n  border-bottom: none;\n  color: #52555f;\n  &::placeholder {\n    font-weight: 400;\n    color: #c7ccdc;\n  }\n  @media ${DEVICE.tablet} {\n    margin-right: -8px;\n    border: 2px solid #f6f7fc;\n    display: flex;\n    padding-left: 12px;\n  }\n  @media ${DEVICE.laptop} {\n    width: 240px;\n  }\n`;\n\nexport const FormControl = styled.input`\n  display: none;\n`;\n\nexport const CountWrapper = styled.div`\n  display: none;\n  @media ${DEVICE.tablet} {\n    justify-content: end;\n    align-items: center;\n    position: relative;\n    width: 183px;\n    display: flex;\n    background-color: transparent;\n    border-top-right-radius: 16px;\n    border-bottom-right-radius: 16px;\n    width: 110px;\n    border: 2px solid #f6f7fc;\n    margin-left: -8px;\n  }\n  @media ${DEVICE.laptop} {\n    width: 121px;\n  }\n`;\n\nexport const CountInput = styled.input`\n  width: 183px;\n  height: 44px;\n  // padding-right: 55px;\n  // padding-left: 55px;\n  margin-right: 5px;\n  border-radius: 22px;\n  font-weight: 900;\n  font-size: 12px;\n  line-height: 1.14;\n  text-align: center;\n  margin-top: 32px;\n  order: 2px solid #f6f7fc;\n  &:focus {\n    outline: none;\n  }\n  background-color: transparent;\n  @media ${DEVICE.tablet} {\n    height: 40px;\n    width: 110px;\n    margin-top: 0;\n\n    border: transparent;\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n  @media ${DEVICE.laptop} {\n    width: 121px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 80px;\n  gap: 20px;\n  @media ${DEVICE.tablet} {\n    margin-top: 32px;\n  }\n  @media ${DEVICE.laptop} {\n    margin-left: 32px;\n    margin-top: 0;\n    gap: 15px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport { useAuth } from 'hooks';\nimport { ReactComponent as Calendar } from '../../images/calendar.svg';\nimport { ReactComponent as Calculator } from '../../images/calculator.svg';\nimport {\n  addExpense,\n  getExpenseCategories,\n  getExpenseSummary,\n  // eslint-disable-next-line\n} from '../../redux/transactions/trans-operations';\nimport {\n  // eslint-disable-next-line\n  selectExpenseCategories,\n} from '../../redux/transactions/trans-selectors';\nimport { Button } from './Button';\nimport moment from 'moment';\nimport Notiflix from 'notiflix';\nimport {\n  ButtonWrapper,\n  // eslint-disable-next-line\n  CountInput,\n  CountWrapper,\n  DateSelection,\n  DateWrapper,\n  DescriptionInput,\n  FormWrapper,\n  InputWrapper,\n  DescriptionWrapper,\n} from './InputArea.styled';\n//import { Container } from '@mui/system';\n\nconst InputArea = ({ value }) => {\n  const [date, setDate] = useState(moment(new Date()).format('YYYY-MM-DD'));\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = React.useState('');\n  const dispatch = useDispatch();\n\n  const [amount, setAmount] = useState('');\n  const { isRefreshing } = useAuth();\n\n  useEffect(() => {\n    if (isRefreshing) {\n      return;\n    }\n    dispatch(getExpenseCategories());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRefreshing]);\n  const transactions = useSelector(selectExpenseCategories);\n\n  const handleChangeList = event => {\n    setCategory(event.target.value);\n  };\n  //  month: moment(date).format('MMMM'),\n  // year: moment(date).format('YYYY'),\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (description.trim().length === 0 || !category || !amount) {\n      return Notiflix.Notify.warning('Missing required fields');\n    }\n    const userEnteredData = {\n      description: description,\n      date: date,\n      category: category,\n      amount: amount,\n    };\n\n    dispatch(addExpense(userEnteredData))\n      .unwrap()\n      .then(() => dispatch(getExpenseSummary()));\n\n    resetForm();\n    // return;\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'date':\n        setDate(value);\n        break;\n      case 'description':\n        setDescription(value);\n        break;\n      case 'amount':\n        const regex = /^\\d+(\\.\\d{0,2})?$/;\n        if (regex.test(value) || value === '') {\n          setAmount(value);\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n  const resetForm = () => {\n    setDate(moment(new Date()).format('YYYY-MM-DD'));\n    setDescription('');\n    setCategory('');\n    setAmount('');\n  };\n\n  useEffect(() => {\n    if (value) {\n      resetForm();\n    }\n  }, [value]);\n\n  // useEffect(() => {\n  //    dispatch\n  //   }, []);\n\n  return (\n    <FormWrapper autoComplete=\"off\" onSubmit={handleSubmit}>\n      <InputWrapper>\n        <DateWrapper>\n          <Calendar />\n\n          <DateSelection\n            aria-label=\"Date\"\n            name=\"date\"\n            dateFormat=\"yyyy-MM-dd\"\n            onChange={handleChange}\n            type=\"date\"\n            value={date}\n            lang=\"en\"\n          />\n        </DateWrapper>\n        <DescriptionWrapper>\n          <DescriptionInput\n            placeholder={'Product description'}\n            name=\"description\"\n            aria-label=\"Text\"\n            onChange={handleChange}\n            type=\"text\"\n            value={description}\n          />\n\n          <FormControl sx={{ m: 1, minWidth: 169 }}>\n            <InputLabel\n              id=\"demo-simple-select-autowidth-label\"\n              style={{\n                fontSize: '12px',\n                color: '#c7ccdc',\n                lineHeight: '1.14',\n                paddingLeft: '12px',\n                paddingTop: '9px',\n              }}\n            >\n              Product category\n            </InputLabel>\n\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={category ?? ''}\n              onChange={handleChangeList}\n              variant=\"standard\"\n              disableUnderline={true}\n              style={{\n                border: '2px solid rgb(246, 247, 252)',\n                height: '44px',\n                top: '-8px',\n                color: '#c7ccdc',\n                fontSize: '12px',\n              }}\n            >\n              {transactions.map(el => (\n                <MenuItem key={el} value={el}>\n                  {el}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <CountWrapper>\n            <CountInput\n              onChange={handleChange}\n              type=\"number\"\n              name=\"amount\"\n              placeholder=\"00.00\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={amount}\n            />\n            <Calculator\n              style={{\n                fill: 'black',\n                position: 'absolute',\n                marginRight: '23px',\n              }}\n            />\n\n            {/* </Calculator> */}\n          </CountWrapper>\n        </DescriptionWrapper>\n      </InputWrapper>\n      <ButtonWrapper>\n        <Button type=\"submit\" color=\"accent\" design=\"operation\">\n          {'Input'}\n        </Button>\n        <Button\n          type=\"button\"\n          color=\"white\"\n          design=\"operation\"\n          onClick={resetForm}\n        >\n          {'Clear'}\n        </Button>\n      </ButtonWrapper>\n    </FormWrapper>\n  );\n};\n\nexport default InputArea;\n","import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport { useEffect, useState } from 'react';\nimport DeleteBtn from 'components/DeleteBtn/DeleteBtn';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getExpensesTrans } from 'redux/transactions/trans-selectors';\nimport { getExpenseSummary } from 'redux/transactions/trans-operations';\nimport { useAuth } from 'hooks';\n\nconst columns = [\n  {\n    id: 'date',\n    label: 'DATE',\n    paddingLeft: '20px',\n    maxWidth: 120,\n  },\n  { id: 'description', label: 'DESCRIPTION', minWidth: 220 },\n  {\n    id: 'category',\n    label: 'CATEGORY',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'amount',\n    label: 'SUM',\n    minWidth: 100,\n    align: 'center',\n  },\n  {\n    id: 'del',\n    label: '',\n    minWidth: 70,\n    align: 'center',\n  },\n];\n\nexport default function OperationsTable() {\n  const allExpensesTrans = useSelector(getExpensesTrans);\n\n  const { isRefreshing } = useAuth();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isRefreshing) {\n      return;\n    }\n    dispatch(getExpenseSummary());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRefreshing]);\n\n  // Вариант сделать пустые строки\n  const [emptyRowCount, setEmptyRowCount] = useState(0);\n\n  useEffect(() => {\n    if (!allExpensesTrans) {\n      return;\n    }\n    if (allExpensesTrans.length >= 15) {\n      return;\n    }\n    setEmptyRowCount(15 - allExpensesTrans.length);\n  }, [allExpensesTrans]);\n\n  return (\n    <Paper\n      sx={{\n        maxWidth: 746,\n        overflow: 'hidden',\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        marginTop: '62px',\n        maxHeight: 410,\n        overflowY: 'scrool',\n      }}\n    >\n      <TableContainer\n        sx={{\n          maxHeight: 410,\n        }}\n      >\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{\n                    minWidth: column.minWidth,\n                    padding: '12px 25px',\n                    fontWeight: 700,\n                    fontSize: '12px',\n                    lineHeight: 1.17,\n                    letterSpacing: '0.02em',\n                    color: '#000000',\n                    backgroundColor: '#F5F6FB',\n                  }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {allExpensesTrans !== null ? (\n              [...allExpensesTrans, ...Array(emptyRowCount).fill(null)].map(\n                row => {\n                  if (!row) {\n                    return (\n                      <TableRow key={Math.random()}>\n                        {columns.map(column => (\n                          <TableCell\n                            key={column.id}\n                            align={column.align}\n                            style={{\n                              height: 40,\n                              paddingTop: 10,\n                              paddingBottom: 10,\n                            }}\n                          />\n                        ))}\n                      </TableRow>\n                    );\n                  }\n\n                  return (\n                    <TableRow key={row._id}>\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell\n                            key={column.id}\n                            align={column.align}\n                            style={{\n                              height: 40,\n                              paddingTop: 10,\n                              paddingBottom: 10,\n                              fontWeight: column.id === 'amount' ? 700 : 400,\n                              fontSize: '12px',\n                              lineHeight: 1.17,\n                              letterSpacing: '0.04em',\n\n                              color:\n                                column.id === 'amount' ? '#E7192E' : '#52555F',\n                            }}\n                          >\n                            {column.id === 'date' && value.split('-').join('.')}\n                            {column.id === 'description' && value}\n                            {column.id === 'category' && value}\n                            {column.id === 'amount' &&\n                              `- ${value.toFixed(2)} UAH.`}\n                            {column.id === 'del' && <DeleteBtn id={row._id} />}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                }\n              )\n            ) : (\n              <TableRow>\n                <TableCell />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n","import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { useSelector } from 'react-redux';\n\nimport { getExpensesMonthStats } from 'redux/transactions/trans-selectors';\n\nconst columns = [\n  { id: 'month', minWidth: 107 },\n  { id: 'total', minWidth: 107, align: 'right' },\n];\n\nexport default function Summery() {\n  const monthsStats = useSelector(getExpensesMonthStats);\n\n  const arrayOfMonthsStats = Object.keys(monthsStats)\n    .reverse()\n    .map(key => ({\n      month: key,\n      total: monthsStats[key],\n    }))\n    .filter(el => el.total !== 'N/A');\n\n  return (\n    <Paper\n      elevation={0}\n      sx={{\n        maxWidth: 230,\n        minWidth: 214,\n        maxHeight: 280,\n        marginTop: '60px',\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        borderBottomRightRadius: 20,\n        backgroundColor: '#F5F6FB',\n      }}\n    >\n      <TableContainer>\n        <Table aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell\n                align=\"center\"\n                colSpan={2}\n                style={{\n                  paddingTop: 12,\n                  paddingBottom: 12,\n                  borderTopLeftRadius: 20,\n                  borderTopRightRadius: 20,\n                  fontWeight: 700,\n                  fontSize: '12px',\n                  lineHeight: 1.17,\n                  letterSpacing: '0.02em',\n                  color: '#000000',\n                  backgroundColor: '#F5F6FB',\n                }}\n              >\n                SUMMERY\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {arrayOfMonthsStats.map(row => {\n              return (\n                <TableRow\n                  hover\n                  role=\"checkbox\"\n                  tabIndex={-1}\n                  key={row.month}\n                  style={{\n                    borderTop: '2px solid #FFFFFF',\n                    borderBottom: '2px solid #FFFFFF',\n                  }}\n                >\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{\n                          padding: '13px 12px',\n                          fontSize: '12px',\n                          lineHeight: 1.17,\n                          letterSpacing: '0.04em',\n                          color: '#52555F',\n                          backgroundColor: '#F5F6FB',\n                        }}\n                      >\n                        {column.id === 'month' && value.toUpperCase()}\n                        {column.id === 'total' && value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport InputArea from 'components/InputArea';\nimport TransactionButtons from 'components/TransactionButtons';\nimport { TransactionsContainer, Wrapper } from './Operations.styled';\nimport OperationsTable from 'components/OperationsTable/OperationsTable';\nimport Background from 'components/Background/Background';\nimport Summary from 'components/Summary/Summary';\nimport { Balance } from 'components/Balance/Balance';\n\nexport default function Home() {\n  return (\n    <Background type=\"Main\">\n      <Balance />\n      <TransactionButtons />\n      <TransactionsContainer>\n        <InputArea />\n        <Wrapper>\n          <OperationsTable />\n          <Summary />\n        </Wrapper>\n      </TransactionsContainer>\n\n      <Link to=\"/report\" style={{ display: 'block' }}>\n        REPORT\n      </Link>\n    </Background>\n  );\n}\n"],"names":["SIZE","DEVICE","mobile","tablet","laptop","FormWrapper","styled","InputWrapper","DateWrapper","DateSelection","DescriptionWrapper","DescriptionInput","CountWrapper","CountInput","ButtonWrapper","value","useState","moment","Date","format","date","setDate","description","setDescription","React","category","setCategory","dispatch","useDispatch","amount","setAmount","isRefreshing","useAuth","useEffect","getExpenseCategories","transactions","useSelector","selectExpenseCategories","handleChange","target","name","test","resetForm","autoComplete","onSubmit","evt","preventDefault","trim","length","Notiflix","userEnteredData","addExpense","unwrap","then","getExpenseSummary","dateFormat","onChange","type","lang","placeholder","FormControl","sx","m","minWidth","InputLabel","id","style","fontSize","color","lineHeight","paddingLeft","paddingTop","Select","labelId","event","variant","disableUnderline","border","height","top","map","el","MenuItem","min","step","fill","position","marginRight","Button","design","onClick","columns","label","maxWidth","align","OperationsTable","allExpensesTrans","getExpensesTrans","emptyRowCount","setEmptyRowCount","Paper","overflow","borderTopLeftRadius","borderTopRightRadius","marginTop","maxHeight","overflowY","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","padding","fontWeight","letterSpacing","backgroundColor","TableBody","Array","row","paddingBottom","split","join","toFixed","DeleteBtn","_id","Math","random","Summery","monthsStats","getExpensesMonthStats","arrayOfMonthsStats","Object","keys","reverse","key","month","total","filter","elevation","borderBottomRightRadius","colSpan","hover","role","tabIndex","borderTop","borderBottom","toUpperCase","Home","Background","Balance","TransactionButtons","to","display"],"sourceRoot":""}