{"version":3,"file":"static/js/782.36a94b0f.chunk.js","mappings":"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","sources":["components/IncomeInput/IncomeInput.styled.jsx","components/IncomeInput/IncomeInput.jsx","pages/IncomePage/IncomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nconst SIZE = {\n  mobile: '320px',\n  tablet: '768px',\n  laptop: '1280px',\n};\nconst DEVICE = {\n  mobile: `screen and (min-width: ${SIZE.mobile})`,\n  tablet: `screen and (min-width: ${SIZE.tablet})`,\n  laptop: `screen and (min-width: ${SIZE.laptop})`,\n};\n\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  @media ${DEVICE.tablet} {\n\n  }\n  @media ${DEVICE.laptop} {\n    flex-direction: row;\n    justify-self: flex-start;\n    flex-wrap: nowrap;\n    \n  }\n`;\n\nexport const InputWrapper = styled.div`\n    align-items: center;\n  display: contents;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border-bottom-left-radius: 30%;\n  background-color: transparent;\n \n  @media ${DEVICE.tablet} {\n    display: flex;\n    flex-direction: row;\n     height: 44px;\n  }\n  @media ${DEVICE.laptop} {\n    height: 40px;\n    text-align: center;\n  }\n  \n  \n`;\n\nexport const DateWrapper = styled.div`\n    display: flex;\n    gap: 10px;\n position: relative;\n     margin-right: 44px;\n\n  margin-bottom: 32px;\n  @media ${DEVICE.tablet} {\n    margin-bottom: 0px;\n  }\n \n`;\nexport const DateSelection = styled.input`\n    font-family: 'Roboto';\nfont-style: normal;\n    border: none;\n    font-weight: 900;\n    font-size: 14px;\n    line-height: 1.16;\n    display: flex;\nalign-items: center;\nletter-spacing: 0.04em;\ntext-transform: uppercase;\n\ncolor: #52555F;\n \n  &::-webkit-calendar-picker-indicator {\n\n    color: rgba(0, 0, 0, 0);\n    z-index: 0;\n    width: 90px;\n    height: 100%;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    top: 0;\n    cursor: pointer;\n  }\n\n`;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n    align-items: center;\n`\nexport const DescriptionInput = styled.input`\n display: none;\n  width: 184px;\n  height: 44px;\n  border-top-left-radius: 16px;\n  font-size: 12px;\n  line-height: 1.14;\n  background-color: transparent;\n  padding-left: 30px;\n  border: 2px solid #FFFFFF;\n  border-bottom: none;\n  color: #52555F;\n  &::placeholder {\n    font-weight: 400;\n    color: #c7ccdc;\n  }\n  @media ${DEVICE.tablet} {\n      margin-right: -8px;\n    border: 2px solid #f6f7fc;\n    display: flex;\n    padding-left: 12px;\n  }\n  @media ${DEVICE.laptop} {\n     width: 240px; \n  }\n`;\n\nexport const FormControl = styled.input`\n  display: none;\n\n  \n`;\n\nexport const CountWrapper = styled.div`\ndisplay: none;\n  @media ${DEVICE.tablet} {\n    justify-content: end;\n    align-items: center;\n    position: relative;\n  width: 183px;\n    display: flex;\n    background-color: transparent;\n    border-top-right-radius: 16px;\n    border-bottom-right-radius: 16px;\n    width: 110px;\n    border: 2px solid #f6f7fc;\n        margin-left: -8px\n  }\n  @media ${DEVICE.laptop} {\n    width: 121px;\n  }\n  \n`;\n\n\n\nexport const CountInput = styled.input`\n  width: 183px;\n  height: 44px;\n // padding-right: 55px;\n // padding-left: 55px;\n margin-right: 5px;\n  border-radius: 22px;\n  font-weight: 900;\n  font-size: 12px;\n  line-height: 1.14;\n  text-align: center;\n  margin-top: 32px;\n    order: 2px solid #f6f7fc;\n;\n  background-color: transparent;\n  @media ${DEVICE.tablet} {\n    height: 40px;\n    width: 110px;\n    margin-top: 0;\n   \n    border: transparent;\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n  @media ${DEVICE.laptop} {\n    width: 121px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n display: flex;\n justify-content:center;\n  margin-top: 80px;\n  gap: 20px;\n  @media ${DEVICE.tablet} {\n    margin-top: 32px;\n  }\n  @media ${DEVICE.laptop} {\n    margin-left: 32px;\n    margin-top: 0;\n    gap: 15px;\n  }\n`;","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport { useAuth } from 'hooks';\nimport { ReactComponent as Calendar } from '../../images/calendar.svg';\nimport { ReactComponent as Calculator } from '../../images/calculator.svg';\nimport {\n  addIncome,\n  getIncomeCategories,\n  // eslint-disable-next-line\n} from '../../redux/transactions/trans-operations';\nimport {\n  // eslint-disable-next-line\n\n  selectIncomeCategories,\n} from '../../redux/transactions/trans-selectors';\nimport { Button } from '../InputArea/Button';\nimport moment from 'moment';\nimport Notiflix from 'notiflix';\nimport {\n  ButtonWrapper,\n  // eslint-disable-next-line\n  CountInput,\n  CountWrapper,\n  DateSelection,\n  DateWrapper,\n  DescriptionInput,\n  FormWrapper,\n  InputWrapper,\n  DescriptionWrapper,\n} from './IncomeInput.styled';\n\nconst IncomeInput = ({ value }) => {\n  const [date, setDate] = useState(moment(new Date()).format('YYYY-MM-DD'));\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = React.useState('');\n  const dispatch = useDispatch();\n\n  const [amount, setAmount] = useState('');\n  const { isRefreshing } = useAuth();\n\n  useEffect(() => {\n    if (isRefreshing) {\n      return;\n    }\n    dispatch(getIncomeCategories());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRefreshing]);\n  const transactions = useSelector(selectIncomeCategories);\n\n  const handleChangeList = event => {\n    setCategory(event.target.value);\n  };\n  //  month: moment(date).format('MMMM'),\n  // year: moment(date).format('YYYY'),\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (description.trim().length === 0 || !category || !amount) {\n      return Notiflix.Notify.warning('Missing required fields');\n    }\n    const userEnteredData = {\n      description: description,\n      date: date,\n      category: category,\n      amount: Number(amount),\n    };\n\n    dispatch(addIncome(userEnteredData));\n    resetForm();\n    // return;\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'date':\n        setDate(value);\n        break;\n      case 'description':\n        setDescription(value);\n        break;\n      case 'amount':\n        const regex = /^\\d+(\\.\\d{0,2})?$/;\n        if (regex.test(value) || value === '') {\n          setAmount(value);\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n  const resetForm = () => {\n    setDate(moment(new Date()).format('YYYY-MM-DD'));\n    setDescription('');\n    setCategory('');\n    setAmount('');\n  };\n\n  useEffect(() => {\n    if (value) {\n      resetForm();\n    }\n  }, [value]);\n\n  // useEffect(() => {\n  //    dispatch\n  //   }, []);\n\n  return (\n    <FormWrapper autoComplete=\"off\" onSubmit={handleSubmit}>\n      <InputWrapper>\n        <DateWrapper>\n          <Calendar />\n\n          <DateSelection\n            aria-label=\"Date\"\n            name=\"date\"\n            dateFormat=\"yyyy-MM-dd\"\n            onChange={handleChange}\n            type=\"date\"\n            value={date}\n          />\n        </DateWrapper>\n        <DescriptionWrapper>\n          <DescriptionInput\n            placeholder={'Product description'}\n            name=\"description\"\n            aria-label=\"Text\"\n            onChange={handleChange}\n            type=\"text\"\n            value={description}\n          />\n\n          <FormControl sx={{ m: 1, minWidth: 169 }}>\n            <InputLabel\n              id=\"demo-simple-select-autowidth-label\"\n              style={{\n                fontSize: '12px',\n                color: '#c7ccdc',\n                lineHeight: '1.14',\n                paddingLeft: '12px',\n                paddingTop: '9px',\n              }}\n            >\n              Product category\n            </InputLabel>\n\n            <Select\n              labelId=\"demo-simple-select-autowidth-label\"\n              id=\"demo-simple-select-autowidth\"\n              value={category ?? ''}\n              onChange={handleChangeList}\n              variant=\"standard\"\n              disableUnderline={true}\n              style={{\n                border: '2px solid rgb(246, 247, 252)',\n                height: '44px',\n                top: '-8px',\n                color: '#c7ccdc',\n                fontSize: '12px',\n              }}\n            >\n              {transactions.map(el => (\n                <MenuItem key={el} value={el}>\n                  {el}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <CountWrapper>\n            <CountInput\n              onChange={handleChange}\n              type=\"number\"\n              name=\"amount\"\n              placeholder=\"00.00\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={amount}\n            />\n            <Calculator\n              style={{\n                fill: 'black',\n                position: 'absolute',\n                marginRight: '23px',\n              }}\n            />\n          </CountWrapper>\n        </DescriptionWrapper>\n      </InputWrapper>\n      <ButtonWrapper>\n        <Button type=\"submit\" color=\"accent\" design=\"operation\">\n          {'Input'}\n        </Button>\n        <Button\n          type=\"button\"\n          color=\"white\"\n          design=\"operation\"\n          onClick={resetForm}\n        >\n          {'Clear'}\n        </Button>\n      </ButtonWrapper>\n    </FormWrapper>\n  );\n};\n\nexport default IncomeInput;\n","import { Link } from 'react-router-dom';\nimport TransactionButtons from 'components/TransactionButtons';\nimport IncomeInput from 'components/IncomeInput';\nimport { TransactionsContainer } from '../Operations/Operations.styled';\nimport Background from 'components/Background/Background';\nimport { Balance } from 'components/Balance/Balance';\nexport default function Home() {\n  return (\n    <Background type=\"Main\">\n      <Balance />\n      <div>\n        <TransactionButtons />\n        <TransactionsContainer>\n          <IncomeInput />\n        </TransactionsContainer>\n        <Link to=\"/report\" style={{ display: 'block' }}>\n          REPORT\n        </Link>\n      </div>\n    </Background>\n  );\n}\n"],"names":["SIZE","DEVICE","mobile","tablet","laptop","FormWrapper","styled","InputWrapper","DateWrapper","DateSelection","DescriptionWrapper","DescriptionInput","CountWrapper","CountInput","ButtonWrapper","value","useState","moment","Date","format","date","setDate","description","setDescription","React","category","setCategory","dispatch","useDispatch","amount","setAmount","isRefreshing","useAuth","useEffect","getIncomeCategories","transactions","useSelector","selectIncomeCategories","handleChange","target","name","test","resetForm","autoComplete","onSubmit","evt","preventDefault","trim","length","Notiflix","userEnteredData","Number","addIncome","dateFormat","onChange","type","placeholder","FormControl","sx","m","minWidth","InputLabel","id","style","fontSize","color","lineHeight","paddingLeft","paddingTop","Select","labelId","event","variant","disableUnderline","border","height","top","map","el","MenuItem","min","step","fill","position","marginRight","Button","design","onClick","Home","Background","Balance","TransactionButtons","to","display"],"sourceRoot":""}